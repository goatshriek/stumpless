name: "Linux"

on:
  push:
  pull_request:
    branches:
      - latest

env:
  CTEST_OUTPUT_ON_FAILURE: 1

jobs:
  linux-debug:
    name: "linux, debug"
    runs-on: "ubuntu-latest"
    steps:
      - name: Install Prereqs
        run: |
          sudo apt-get update
          sudo apt-get install libsystemd-dev valgrind
      - uses: actions/checkout@v2
      - name: Configure
        run: |
          cmake -DCOVERAGE=ON -DCMAKE_BUILD_TYPE=Debug .
      - name: Build
        run: |
          make all
      - name: Test
        run: |
          make check
          if grep "DEPRECATED" Testing/Temporary/LastTest.log; then exit 1; fi
      - name: Privileged Tests
        run: |
          sudo ./function-test-tcp4
          sudo ./function-test-tcp4_leak
          sudo ./function-test-tcp6
          sudo ./function-test-tcp6_leak
          sudo ./function-test-udp4
          sudo ./function-test-udp4_leak
          sudo ./function-test-udp6
          sudo ./function-test-udp6_leak
      - name: Codecov Upload
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true
      - name: Thread Safety Tests
        run: |
          make check-thread-safety
          sudo ./thread-safety-test-network
      - name: Run Examples
        run: |
          make examples
      - name: Valgrind Tests
        run: |
          (for f in $(ls function-test-*); do valgrind --error-exitcode=1 --leak-check=yes --suppressions=tools/valgrind/journald.supp ./$f || exit 1; done)
          (for f in $(ls example-*); do valgrind --error-exitcode=1 --leak-check=yes --suppressions=tools/valgrind/journald.supp ./$f || exit 1; done)
      - name: Install
        run: |
          sudo make install
  linux-release:
    name: "linux, release"
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v2
      - name: Configure
        run: |
          cmake -DCOVERAGE=ON -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr .
      - name: Build
        run: |
          make all
      - name: Test
        run: |
          make check
          if grep "DEPRECATED" Testing/Temporary/LastTest.log; then exit 1; fi
      - name: Privileged Tests
        run: |
          sudo ./function-test-tcp4
          sudo ./function-test-tcp4_leak
          sudo ./function-test-tcp6
          sudo ./function-test-tcp6_leak
          sudo ./function-test-udp4
          sudo ./function-test-udp4_leak
          sudo ./function-test-udp6
          sudo ./function-test-udp6_leak
      - name: Codecov Upload
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true
      - name: Thread Safety Tests
        run: |
          make check-thread-safety
          sudo ./thread-safety-test-network
      - name: Run Examples
        run: |
          make examples
      - name: Run Benchmarks
        run: |
          make bench
      - name: Install
        run: |
          sudo make install
      - name: Test Install
        run: |
          gcc docs/examples/basic/basic_example.c -lstumpless -o basic_example
          ./basic_example
  linux-all-disabled:
    name: "linux, all features disabled"
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v2
      - name: Configure
        run: |
          cmake -DCOVERAGE=ON -DENABLE_JOURNALD_TARGETS=OFF -DENABLE_NETWORK_TARGETS=OFF -DENABLE_SOCKET_TARGETS=OFF -DENABLE_WINDOWS_EVENT_LOG_TARGETS=OFF -DENABLE_THREAD_SAFETY=OFF .
      - name: Build
        run: |
          make all
      - name: Test
        run: |
          make check
          if grep "DEPRECATED" Testing/Temporary/LastTest.log; then exit 1; fi
      - name: Codecov Upload
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true
      - name: Run Examples
        run: |
          make examples
      - name: Install
        run: |
          sudo make install
  linux-cpp-debug:
    name: "linux, with c++, debug"
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-ruby@v1.1.2
      - name: Install Gems
        run: |
          gem install bundler
          bundle install
      - name: Install Packages
        run: |
          sudo apt-get install doxygen valgrind
      - name: Configure
        run: |
          cmake -DCMAKE_BUILD_TYPE=Debug -DENABLE_CPP=ON .
      - name: Build
        run: |
          make all
      - name: Test
        run: |
          make check-cpp
      - name: Run Example
        run: |
          make example-cpp
          ./example-cpp
      - name: Install
        run: |
          sudo make install
      - name: Build Documentation
        run: |
          make docs-cpp
  linux-cpp-release:
    name: "linux, with c++, release"
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-ruby@v1.1.2
      - name: Install Gems
        run: |
          gem install bundler
          bundle install
      - name: Install Packages
        run: |
          sudo apt-get install doxygen
      - name: Configure
        run: |
          cmake -DCMAKE_BUILD_TYPE=Release -DENABLE_CPP=ON .
      - name: Build
        run: |
          make all
      - name: Test
        run: |
          make check-cpp
      - name: Run Example
        run: |
          make example-cpp
          ./example-cpp
      - name: Install
        run: |
          sudo make install
      - name: Build Documentation
        run: |
          make docs-cpp

