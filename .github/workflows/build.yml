name: "build"
on:
  push:
  pull_request:
    branches:
      - latest
env:
  CTEST_OUTPUT_ON_FAILURE: 1
jobs:
#  linux-debug:
#    name: "linux, debug"
#    runs-on: "ubuntu-20.04"
#    steps:
#      - uses: actions/checkout@v2
#      - name: Configure
#        run: |
#          cmake -DCOVERAGE=ON -DCMAKE_BUILD_TYPE=Debug .
#      - name: Build
#        run: |
#          make all
#      - name: Test
#        run: |
#          make check
#      - name: Run Examples
#        run: |
#          make examples
#      - name: Codecov Upload
#        uses: codecov/codecov-action@v1
#        with:
#          fail_ci_if_error: true
#  linux-release:
#    name: "linux, release"
#    runs-on: "ubuntu-20.04"
#    steps:
#      - uses: actions/checkout@v2
#      - name: Configure
#        run: |
#          cmake -DCOVERAGE=ON -DCMAKE_BUILD_TYPE=Release .
#      - name: Build
#        run: |
#          make all
#      - name: Test
#        run: |
#          make check
#      - name: Run Examples
#        run: |
#          make examples
#      - name: Codecov Upload
#        uses: codecov/codecov-action@v1
#        with:
#          fail_ci_if_error: true
#  linux-all-disabled:
#    name: "linux, all features disabled"
#    runs-on: "ubuntu-20.04"
#    steps:
#      - uses: actions/checkout@v2
#      - name: Configure
#        run: |
#          cmake -DCOVERAGE=ON -DENABLE_NETWORK_TARGETS=OFF -DENABLE_SOCKET_TARGETS=OFF -DENABLE_WINDOWS_EVENT_LOG_TARGETS=OFF .
#      - name: Build
#        run: |
#          make all
#      - name: Test
#        run: |
#          make check
#      - name: Run Examples
#        run: |
#          make examples
#      - name: Codecov Upload
#        uses: codecov/codecov-action@v1
#        with:
#          fail_ci_if_error: true
  linux-cpp:
    name: "linux, with c++"
    runs-on: "ubuntu-20.04"
    steps:
      - name: Install Wrapture
        run: |
          gem install wrapture
      - uses: actions/checkout@v2
      - name: Configure
        run: |
          cmake -DCOVERAGE=ON -DCMAKE_ENABLE_CPP=ON -DCMAKE_BUILD_TYPE=Release .
      - name: Build
        run: |
          make all
      - name: Test
        run: |
          make check
          make check-cpp
      - name: Run Examples
        run: |
          make examples
      - name: Codecov Upload
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true
#  mac-debug:
#    name: "mac, debug"
#    runs-on: "macos-11.0"
#    steps:
#      - uses: actions/checkout@v2
#      - name: Configure
#        run: |
#          cmake -DCOVERAGE=ON -DCMAKE_BUILD_TYPE=Debug .
#      - name: Build
#        run: |
#          make all
#      - name: Test
#        run: |
#          make check
#      - name: Run Examples
#        run: |
#          make examples
#      - name: Codecov Upload
#        uses: codecov/codecov-action@v1
#        with:
#          fail_ci_if_error: true
#  mac-release:
#    name: "mac, release"
#    runs-on: "macos-11.0"
#    steps:
#      - uses: actions/checkout@v2
#      - name: Configure
#        run: |
#          cmake -DCOVERAGE=ON -DCMAKE_BUILD_TYPE=Release .
#      - name: Build
#        run: |
#          make all
#      - name: Test
#        run: |
#          make check
#      - name: Run Examples
#        run: |
#          make examples
#      - name: Codecov Upload
#        uses: codecov/codecov-action@v1
#        with:
#          fail_ci_if_error: true
#  mac-all-disabled:
#    name: "mac, all features disabled"
#    runs-on: "macos-11.0"
#    steps:
#      - uses: actions/checkout@v2
#      - name: Configure
#        run: |
#          cmake -DCOVERAGE=ON -DENABLE_NETWORK_TARGETS=OFF -DENABLE_SOCKET_TARGETS=OFF -DENABLE_WINDOWS_EVENT_LOG_TARGETS=OFF .
#      - name: Build
#        run: |
#          make all
#      - name: Test
#        run: |
#          make check
#      - name: Run Examples
#        run: |
#          make examples
#      - name: Codecov Upload
#        uses: codecov/codecov-action@v1
#        with:
#          fail_ci_if_error: true
#  windows-debug:
#    name: "windows, debug"
#    runs-on: "windows-2019"
#    steps:
#      - uses: actions/checkout@v2
#      - name: Add msbuild to PATH
#        uses: microsoft/setup-msbuild@v1.0.2
#      - name: Configure
#        run: |
#          cmake -G "Visual Studio 16 2019" -DCMAKE_BUILD_TYPE=Debug .
#      - name: Build
#        run: |
#          cmake --build . --config Debug
#      - name: Test
#        run: |
#          cmake --build . --config Debug --target check
#      - name: Run Examples
#        run: |
#          cmake --build . --config Debug --target examples
#  windows-release:
#    name: "windows, release"
#    runs-on: "windows-2019"
#    steps:
#      - uses: actions/checkout@v2
#      - name: Add msbuild to PATH
#        uses: microsoft/setup-msbuild@v1.0.2
#      - name: Configure
#        run: |
#          cmake -G "Visual Studio 16 2019" -DCMAKE_BUILD_TYPE=Release .
#      - name: Build
#        run: |
#          cmake --build . --config Release
#      - name: Test
#        run: |
#          cmake --build . --config Release --target check
#      - name: Run Examples
#        run: |
#          cmake --build . --config Release --target examples
#  basic-windows-all-disabled:
#    name: "windows, all features disabled"
#    runs-on: "windows-2019"
#    steps:
#      - uses: actions/checkout@v2
#      - name: Add msbuild to PATH
#        uses: microsoft/setup-msbuild@v1.0.2
#      - name: Configure
#        run: |
#          cmake -G "Visual Studio 16 2019" -DENABLE_NETWORK_TARGETS=OFF -DENABLE_SOCKET_TARGETS=OFF -DCMAKE_BUILD_TYPE=Release .
#      - name: Build
#        run: |
#          cmake --build . --config Release
#      - name: Test
#        run: |
#          cmake --build . --config Release --target check
#      - name: Run Examples
#        run: |
#          cmake --build . --config Release --target examples
