version: "0.4.2"
classes:
  - name: "Element"
    doc: >
      An element of structured data.

      Elements must have a name, but may not have any parameters. Their
      components must comply with RFC 5424.
    namespace: "stumplesscpp"
    equivalent-struct:
      name: "stumpless_element"
      includes: "stumpless/element.h"
    constructors:
      - doc: "Creates a new Element with the given name."
        params:
          - name: "name"
            doc: "The name of the element."
            type: "const char *"
        wrapped-function:
          name: "stumpless_new_element"
          includes: "stumpless/element.h"
          params:
            - name: "name"
              doc: "The name of the element."
              type: "const char *"
          return:
            type: "equivalent-struct-pointer"
          use-template: "pointer-return-error-check"
    destructor:
      wrapped-function:
        name: "stumpless_destroy_element_only"
        includes:
          - "stumpless/element.h"
        params:
          - name: "equivalent-struct-pointer"
    functions:
      - name: "AddParam"
        doc: "Adds a Param to this Element."
        params:
          - name: "new_param"
            doc: "The Param to add to the Element."
            type: "Param &"
            includes: "Param.hpp"
        return:
          doc: "The modified Element."
          type: "self-reference"
        wrapped-function:
          name: "stumpless_add_param"
          includes: "stumpless/element.h"
          params:
            - value: "equivalent-struct-pointer"
            - value: "new_param"
              type: "struct stumpless_param *"
      - name: "AddParam"
        doc: "Adds a Param to this Element."
        params:
          - name: "new_param"
            doc: "The Param to add to the Element."
            type: "Param *"
            includes: "Param.hpp"
        return:
          doc: "The modified Element."
          type: "self-reference"
        wrapped-function:
          name: "stumpless_add_param"
          includes: "stumpless/element.h"
          params:
            - value: "equivalent-struct-pointer"
            - value: "new_param"
              type: "struct stumpless_param *"
      - name: "AddParam"
        doc: |
          Creates a new param with the given name and value and adds it to this
          Element.

          Available since release v1.6.0.
        params:
          - name: "param_name"
            doc: "The name of the new Param."
            type: "const char *"
          - name: "param_value"
            doc: "The value of the new Param."
            type: "const char *"
        return:
          doc: "The modified Element."
          type: "self-reference"
        wrapped-function:
          name: "stumpless_add_new_param"
          includes: "stumpless/element.h"
          params:
            - value: "equivalent-struct-pointer"
            - value: "param_name"
            - value: "param_value"
      - name: "GetName"
        doc: |
          The name of this Element.

          Available since release v1.6.0.
        return:
          doc: "The name of this Element."
          type: "const char *"
        wrapped-function:
          name: "stumpless_get_element_name"
          includes: "stumpless/element.h"
          params:
            - value: "equivalent-struct-pointer"
          return:
            type: "const char *"
      - name: "GetParam"
        doc: |
          Returns the param in the given element at the specified index.

          Available since release v1.6.0.
        params:
          - name: "index"
            doc: "The index of the param to get."
            type:
              name: "size_t"
              includes: "stddef.h"
        return:
          doc: "The param at the given index."
          type:
            name: "Param"
            includes: "Param.hpp"
        wrapped-function:
          name: "stumpless_get_param_by_index"
          includes: "stumpless/element.h"
          params:
            - value: "equivalent-struct-pointer"
            - value: "index"
          return:
            type: "struct stumpless_param *"
            includes: "stumpless/param.h"
      - name: "GetParam"
        doc: |
          Returns the first param in this element with the given name.

          Note that an element may contain as many instances of a param as
          desired according to RFC 5424, and therefore there may be other Params
          with the same name. If you simply need a count of params with a given
          name, then you can use GetParamNameCount to find this. If you need a
          reference to any other params, then you must loop through all params
          in the element using GetParam with an index, checking each name.

          Available since release v1.6.0.
        params:
          - name: "name"
            doc: "The name of the param to get."
            type: "const char *"
        return:
          doc: "The param at the given index."
          type:
            name: "Param"
            includes: "Param.hpp"
        wrapped-function:
          name: "stumpless_get_param_by_name"
          includes: "stumpless/element.h"
          params:
            - value: "equivalent-struct-pointer"
            - value: "name"
          return:
            type: "struct stumpless_param *"
            includes: "stumpless/param.h"
      - name: "GetParamCount"
        doc: |
          Returns the number of params in the given element.

          Available since release v1.6.0.
        return:
          doc: "The number of params this Element has."
          type:
            name: "size_t"
            includes: "stddef.h"
        wrapped-function:
          name: "stumpless_get_param_count"
          includes: "stumpless/element.h"
          params:
            - value: "equivalent-struct-pointer"
          return:
            type: "size_t"
      - name: "GetParamIndex"
        doc: |
          Gives the index of the first occurrence of a Param with the given name
          in this Element.

          Note that an element may contain as many instances of a param as
          desired according to RFC 5424, and therefore there may be other Params
          that this function does not recognize. If you simply need a count of
          params with a given name, then you can use GetParamNameCount to find
          this. If you need a reference to any other params, then you must loop
          through all params in the element using GetParam with an index,
          checking each name.

          Available since release v1.6.0.
        params:
          - name: "name"
            doc: "The name of the Param to search for."
            type: "const char *"
        return:
          doc: |
            The index of the first Param with the given name. If no such Param
            is found, then a StumplessParamNotFound exception is thrown.
          type:
            name: "size_t"
            includes: "stddef.h"
        wrapped-function:
          name: "stumpless_get_param_index"
          includes: "stumpless/element.h"
          params:
            - value: "equivalent-struct-pointer"
            - value: "name"
          return:
            type: "size_t"
      - name: "SetName"
        doc: |
          Set the name of this Element.

          Available since release v1.6.0.
        params:
          - name: "name"
            doc: "The new name."
            type: "const char *"
        return:
          doc: "The modified Element."
          type: "self-reference"
        wrapped-function:
          name: "stumpless_set_element_name"
          includes: "stumpless/element.h"
          params:
            - value: "equivalent-struct-pointer"
            - value: "name"
