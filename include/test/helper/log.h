#ifndef __STUMPLESS_TEST_HELPER_LOG_H
#define __STUMPLESS_TEST_HELPER_LOG_H

/**
 * @file
 * Functions for working with TestLogs.
 */

#include "test/type.h"

/**
 * Creates the global TestLog and sets all values to empty. If the global
 * TestLog already exists, it is reset.
 *
 * @return the TestLog that was created
 */
TestLog *
InitializeTestLog
( void );

/**
 * Get the last Record run through an Adapter. Only Adapters that register will
 * update the value.
 *
 * @return the last Record run through an Adapter, or NULL if the TestLog is
 * NULL or one has not been registered.
 */
const Record *
TestLogGetLastAdaptedRecord
( void );

/**
 * Get the last Adapter run. Only Adapters that register will be returned.
 *
 * @return the last Adapter run, or NULL if one has not been registered
 */
const Adapter *
TestLogGetLastAdapter
( void );

/**
 * Get the last Record Formatted. Only Formatters that register will update the
 * information.
 *
 * @return the last Output run through a Formatter
 */
const Record *
TestLogGetLastFormattedRecord
( void );

/**
 * Get the last Formatter run. Only Formatters that register will be returned.
 *
 * @return the last Formatter run, or NULL if one has not been registered
 */
const Formatter *
TestLogGetLastFormatter
( void );

/**
 * Get the last Output generated by a Formatter. Only Formatters that register
 * their Output will update the Output set.
 *
 * @return the last Output generated, or NULL if one has not been registered
 */
const Output *
TestLogGetLastGeneratedOutput
( void );

/**
 * Get the last Output processed by a Handler. Only Handlers that register their
 * Output will update the value returned.
 *
 * @return the last Output handled, or NULL if one has not been registered
 */
const Output *
TestLogGetLastHandledOutput
( void );

/**
 * Get the last Handler run. Only Handlers that register will be returned.
 *
 * @return the last Handler run, or NULL if one has not been registered
 */
const Handler *
TestLogGetLastHandler
( void );

/**
 * Get the last message logged. Only Handlers that register the message
 * will update the value returned.
 */
const char *
TestLogGetLastMessage
( void );

/**
 * Set the last adapted Record. A NULL Record is ingored.
 *
 * @param record the Record to set
 *
 * @return the TestLog, or NULL if a problem is encountered
 */
TestLog *
TestLogSetLastAdaptedRecord
( const Record *record );

/**
 * Set the last Adapter run. A NULL Adapter is ignored.
 *
 * @param adapter the Adapter to set
 *
 * @return the TestLog, or NULL if a problem is encountered
 */
TestLog *
TestLogSetLastAdapter
( const Adapter *adapter );

/**
 * Set the last formatted Record. A NULL Record is ignored.
 *
 * @param record the Record to set
 *
 * @return the TestLog, or NULL if a problem is encountered
 */
TestLog *
TestLogSetLastFormattedRecord
( const Record *record );

/**
 * Set the last Formatter run. A NULL Formatter is ignored.
 *
 * @param formatter the Formatter to set
 *
 * @return the TestLog, or NULL if a problem is encountered
 */
TestLog *
TestLogSetLastFormatter
( const Formatter *formatter );

/**
 * Set the last Output generated by a Formatter. A NULL Output is ignored.
 *
 * @param output the Output to set
 *
 * @return the TestLog, or NULL if a problem is encountered
 */
TestLog *
TestLogSetLastGeneratedOutput
( const Output *output );

/**
 * Set the last Output handled by a Handler. A NULL Output is ignored.
 *
 * @param output the Output to set
 *
 * @return the TestLog, or NULL if a problem is encountered
 */
TestLog *
TestLogSetLastHandledOutput
( const Output *output );

/**
 * Set the last Handler run. A NULL Handler is ignored.
 *
 * @param handler the Handler to set
 *
 * @return the TestLog, or NULL if a problem is encountered
 */
TestLog *
TestLogSetLastHandler
( const Handler *handler );

/**
 * Set the last message logged. A NULL message is ignored.
 *
 * @param message the message to set
 *
 * @return the TestLog, or NULL if a problem is encountered
 */
TestLog *
TestLogSetLastMessage
( const char *message );

#endif
