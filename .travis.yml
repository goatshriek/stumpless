language: c

matrix:
  include:
    - name: "linux, gcc 6"
      os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
      env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
    - name: "linux, gcc 7, amd64"
      os: linux
      arch: amd64
      dist: trusty
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
        sonarcloud:
          organization: "goatshriek-github"
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
#    - name: "linux, gcc 7, ppc64le"
#      os: linux
#      arch: ppc64le
#      dist: trusty
#      addons:
#        apt:
#          sources:
#            - ubuntu-toolchain-r-test
#          packages:
#            - g++-7
#      env:
#        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
#    - name: "linux, gcc 7, s390x"
#      os: linux
#      arch: s390x
#      dist: trusty
#      addons:
#        apt:
#          sources:
#            - ubuntu-toolchain-r-test
#          packages:
#            - g++-7
#      env:
#        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
#    - name: "linux, gcc 7, arm64"
#      os: linux
#      arch: arm64
#      dist: trusty
#      addons:
#        apt:
#          sources:
#            - ubuntu-toolchain-r-test
#          packages:
#            - g++-7
#      env:
#        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
#    - name: "linux, all options off"
#      os: linux
#      dist: trusty
#      addons:
#        apt:
#          sources:
#            - ubuntu-toolchain-r-test
#          packages:
#            - g++-7
#      env:
#        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
#        - BUILD_ARGS="-DENABLE_NETWORK_TARGETS=OFF -DENABLE_SOCKET_TARGETS=OFF -DENABLE_WINDOW_EVENT_LOG_TARGETS=OFF"
#    - name: "linux, no unistd.h"
#      os: linux
#      dist: trusty
#      addons:
#        apt:
#          sources:
#            - ubuntu-toolchain-r-test
#          packages:
#            - g++-7
#      env:
#        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
#        - BUILD_ARGS="-DHAVE_UNISTD_H=FALSE"
#    - name: "os x, clang"
#      os: osx
#      env:
#        - MATRIX_EVAL="CC=clang && CXX=clang++"
#    - name: "os x, all options off"
#      os: osx
#      env:
#        - MATRIX_EVAL="CC=clang && CXX=clang++"
#        - BUILD_ARGS="-DENABLE_NETWORK_TARGETS=OFF -DENABLE_SOCKET_TARGETS=OFF -DENABLE_WINDOW_EVENT_LOG_TARGETS=OFF"
    - name: "windows"
      os: windows
      env:
        - MATRIX_EVAL="CC=gcc && CXX=g++"

before_install:
  - eval "${MATRIX_EVAL}"
  - choco install make

before_script:
  # Add an IPv6 config - see the corresponding Travis issue
  # https://github.com/travis-ci/travis-ci/issues/8361
  - if [ "${TRAVIS_OS_NAME}" == "linux" ]; then
      sudo sh -c 'echo 0 > /proc/sys/net/ipv6/conf/all/disable_ipv6';
    fi
  - mkdir build
  - cd build
  - cmake -DCMAKE_C_COMPILER="${CC}" -DCMAKE_CXX_COMPILER="${CXX}" -DCOVERAGE=ON ${BUILD_ARGS} ..

script:
  - ls /C/ProgramData/chocolatey/bin/
  - ../tools/check_headers/check_headers.rb ../include/**/*.h ../include/**/*.hpp
  - ../tools/check_headers/check_headers.rb ../src/*.c ../src/**/*.c
  - ../tools/check_headers/check_headers.rb ../test/**.cpp
  - build-wrapper-linux-x86-64 --out-dir ../bw-output make all || make all
  - make CTEST_OUTPUT_ON_FAILURE=1 check
  - sudo --preserve-env make CTEST_OUTPUT_ON_FAILURE=1 check
  - make examples

after_success:
  - cd ..
  - bash <(curl -s https://codecov.io/bash)
  - sonar-scanner
