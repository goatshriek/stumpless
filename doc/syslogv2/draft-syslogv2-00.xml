<?xml version="1.0" encoding="US-ASCII"?>
<!--
Copyright 2018 Joel E. Anderson

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM
  "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC3749 SYSTEM
  "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3749.xml">
<!ENTITY RFC5234 SYSTEM
  "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5234.xml">
<!ENTITY RFC5424 SYSTEM
  "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5424.xml">
<!ENTITY RFC7011 SYSTEM
  "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7011.xml">
]>


<?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
<?rfc strict="yes" ?>

<rfc
  category="std"
  docName="draft-syslogv3-00"
  ipr="trust200902"
  consensus="no"
  submissionType="IETF"
  updates="5424"
  xml:lang="en"
>

<front>
<title abbrev="Syslog v3">
The Next Generation Logging Protocol
</title>

<author fullname="Joel Anderson" initials="J." surname="Anderson">
<organization>Independent</organization>
<address>
<email>stumpless@verizon.net</email>
</address>
</author>

<date year="2017" month="September"/>

<area>General</area>
<workgroup>Network Working Group</workgroup>
<keyword>logging</keyword>

<abstract>
<t>This document describes an updated version of the Syslog protocol described in <xref target="RFC5424"/>, colloquially known as Syslog v3. The major updates to the protocol are an ability to support traffic flow confidentiality, as well as an option mechanism that allows extra features to be added to the protocol. This mechanism allows for more flexibility in providing support for vendor-specific extensions than the structured data fields allowed in the previous protocol.</t>

<t>This document was written with security as the primary design goal, and efficiency as the secondary. While the layered architecture and structured data support is also maintained, this protocol was written primarily with the intention of allowing extensions to be made without requiring a new protocol or vendor-specific support, but instead to encourage these features to be added as defined standards. The protocol is also intended to conform to previous version standards up to the version field, allowing it to be properly categorized as a syslog message of a newer version rather than an unreconized protocol.</t>

<t>This document obsoletes <xref target="RFC5424"/>.</t>
</abstract>

<note title="Disclaimer">
<t>This is a specification of the next generation syslog protocol in RFC format, though it may never be submitted as a formal RFC.</t>
</note>

</front>

<middle>

<section anchor="intro" title="Introduction">
<t>The Syslog protocol, as defined in <xref target="RFC5424"/>, provides the basis for simple event notification messages. The basic design goals of the protocol are to offload many requirements to lower-level protocols, such as transmission reliability, confidentiality, and authentication. However, in many situations there may not be another mechanism for meeting these needs. For example, traffic flow confidentiality cannot be easily provided by lower-level transport protocols, and may only be necessary for event messages and not other traffic carried by the protocol. TLS, which is recommended to provide confidentiality of messages, is costly and difficult to implement.</t>

<t>The new version of protocol seeks to provide a way for various security and efficiency measures to be implemented without reliance on other protocols. The formatting and option mechanisms allow these shortcomings to be met when needed, and the overhead associated with them avoided when not.</t>
</section>

<section title="Conventions Used in This Document">
<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in <xref target="RFC2119"/>.</t>
</section>

<section title="Syslog v3 Message Format">
<t>The Syslog v3 message has the following ABNF <xref target="RFC5234"/> definition:</t>
<figure><artwork type="abnf">
SYSLOGV3-MESSAGE   = HEADER NILVALUE EVENTS [NILVALUE PADDING]

HEADER             = PRI VERSION NILVALUE HOSTNAME NILVALUE TIMESTAMP 
PRI                = "&lt;" PRIVAL ">"
PRIVAL             = 1*3DIGIT ; range 0 .. 191
VERSION            = NONZERO-DIGIT 0*2DIGIT ; version 2 for a syslog v2 message
HOSTNAME           = 1*255NONZERO-OCTET

TIMESTAMP          = DATE TIME
DATE               = DATE-YEAR DATE-MONTH DATE-DAY
DATE-YEAR          = 3NIBBLE ; four digit year
DATE-MONTH         = NIBBLE ; 1-12
DATE-DAY           = OCTET ; 1-31
TIME               = TIME-PARTIAL TIME-OFFSET
TIME-PARTIAL       = TIME-HOUR TIME-MINUTE TIME-SECOND [TIME-SECFRAC]
TIME-HOUR          = OCTET ; 0-23
TIME-MINUTE        = OCTET ; 0-59
TIME-SECOND        = OCTET ; 0-59
TIME-SECFRAC       = %d03 3OCTET
TIME-OFFSET        = NILVALUE / TIME-NUMOFFSET
TIME-NUMOFFSET     = (%d01 / %d02) TIME-HOUR TIME-MINUTE ; %d01 is +, %d-2 is -

EVENTS             = *EVENT
EVENT              = EVENT-TIME TEMPLATE-ID [ENTRIES] LENGTH MESSAGE
EVENT-TIME         = 4OCTET ; offset in microseconds from the header timestamp
TEMPLATE-ID        = 4OCTET ; template id, must be non-zero
ENTRIES            = NILVALUE 1*ENTRY
ENTRY              = VALUE NILVALUE
LENGTH             = 4OCTET ; the length of the message in bytes
MESSAGE            = VALUE

NIBBLE             = %d00-31
OCTET              = %d00 / NONZERO-OCTET
NONZERO-OCTET      = %d01-255
NONZERO-DIGIT      = %d49-57
DIGIT              = %d48 / NONZERO-DIGIT
NILVALUE           = %d00
VALUE              = *NONZERO-OCTET
PADDING            = *OCTET ; any bit stream, SHOULD be random
</artwork></figure>

<section title="Message Length">
<t>While there is no strict limit to message length, it is recommended that messages be made as succinct as possible. Message originators may choose to implement padding on messages, in order to hide the amount of data that is being transmitted in each message. When this technique is employed, messages should also be sent at regular intervals (for example, every 3 seconds) and padded to the same size, such that the frequency and size of communication is constant and cannot be analyzed for traffic amounts or patterns.</t>
</section>

<section title="HEADER">
<t>The HEADER field specifies basic information regarding details of the message as a whole. The beginning of the header field (up to the version) are designed such that they allow a single receiver to receive older syslog versions and differentiate between the type of message by checking the version field.</t>
</section>

<section title="PRI">
<t>The PRI field is as described in <xref target="RFC5424"/>, containing the priority value of the message as a whole. This field should contain the lowest PRIVAL of all events contained in the message.</t>
</section>

<section title="VERSION">
<t>The VERSION field contains the version of the syslog v2 message being sent. This value is 2 for normal syslog v2 messages, and 3 for syslog v2 template messages, which are described in more detail later in this document.</t>
</section>

<section title="HOSTNAME">
<t>The HOSTNAME field should contain a unique identifier for the machine that originaly sent the message. The field SHOULD be set as suggested in <xref target="RFC5424"/>, however it MAY consist of any string of non-zero octets. NILVALUE MUST NOT be accepted as a valid entry for the hostname field, as it creates difficulties in matching template ids in received messages.</t>
</section>

<section title="TIMESTAMP">
<t>The timestamp of a syslogv3 message is identical in content to the timestamp format described in an earlier version of the Syslog protocol <xref target="RFC5424"/>. However, each of the fields is represented as a binary value rather than an ASCII representation of the digits and characters within. This allows the syslog v2 protocol to keep the same level of precision, while also keeping messages as compact as possible.</t>
</section>

<section title="EVENT">
<t>A syslog v2 message largely consists of a number of events, each describing a single occurence. This is a significant deviation from the syslog protocol, which sends a separate message for each event that needs to be recorded. By rolling several events into a single message, syslog v2 allows messages to be more efficient by sending header data only once, allowing traffic flow confidentiality to be implemented if desired, and allowing overall security measures to be applied to the entire message rather than to individual events if desired.</t>
</section>

<section title="EVENT-TIME">
<t>As each event contained within a message happens at a different point in time, each event has a separate time associated with it. This value uses the message timestamp as a reference point, and is a binary value that represents the offset of the specific event from this timestamp in microseconds. Machines sending create messages with a timestamp from the initial point of message composition, and each message is the time in microseconds after this initial message time occurs. Because this time offset is 4 octets long and and has units of microseconds, this means that the furthest period of time that a single message can span is 2^32 microseconds after the initial time, or approximately 70 minutes.</t>
</section>

<section title="TEMPLATE-ID">
<t>Each event has a specific template associated with it, containing the event-specific field names and other parameters, such as options applied to the particular event. Each event in a syslog v2 message is identified using a TEMPLATE-ID, which specifies the unique identifier of the event that the message was generated by, for example a login failure on a SSH-enabled device. The details of how TEMPLATE-IDs are chosen is described in more detail in the syslog v2 Template Message Format section.</t>
</section>

<section title="ENTRY">
<t>Each entry specifies a named field within an event. This is very similar to the structured data that is used in earlier syslog versions, with the major difference being that the name and order of the fields is stored in the event template rather than each message. This allows messages to be more efficient by not sending the same field titles repeatedly.</t>
</section>

</section>

<section title="syslog v2 Template Message Format">
<t>The syslog v2 template message is designed to send information regarding a specific event that may be logged. This design is heavily inspired by the IPFIX protcol outlined in <xref target="RFC7011"/>. Template messages MUST be sent by a log originator periodically, at an interval between 1 and 30 minutes. It has the following ABNF <xref target="RFC5234"/> definition:</t>
<figure><artwork type="abnf">
TEMPLATE-MESSAGE   = TEMPLATE-HEADER NILVALUE ELEMENTS [PADDING]

TEMPLATE-HEADER    = PRI VERSION NILVALUE HOSTNAME NILVALUE TEMPLATE-ID OPTION-ID [OPTIONS] APP-NAME NILVALUE PROCID NILVALUE MESSAGEID
PRI                = "&lt;" PRIVAL ">"
PRIVAL             = 1*3DIGIT ; range 0 .. 191
VERSION            = NONZERO-DIGIT 0*2DIGIT ; version 2 for a syslog v2 message
TEMPLATE-ID        = 4OCTET ; template id, must be non-zero
OPTION-ID          = 2NILVALUE / 2OCTET ; 0 is no options, others are defined as needed
OPTIONS            = 1*OPTION
OPTION             = 2OCTET *OPTION-PART OPTION-ID ; options used to specify additional features, followed by the next option id
OPTION-PART        = 4OCTET

HOSTNAME           = 1*255NONZERO-OCTET
APPNAME            = NILVALUE / VALUE
PROCID             = NILVALUE / VALUE
MESSAGEID          = NILVALUE / VALUE

ELEMENTS           = *ELEMENT
ELEMENT            = [NAME] NILVALUE PARAMETERS
PARAMETERS         = *PARAMETER
PARAMETER          = VALUE END-PARAMETER
END-ELEMENT        = %d01
END-PARAMETER      = NILVALUE / END-ELEMENT ; is END-ELEMENT for the last parameter
NAME               = VALUE

NONZERO-OCTET      = %d01-255
DIGIT              = %d48 / NONZERO-DIGIT
NONZERO-DIGIT      = %d49-57
NILVALUE           = %d00
VALUE              = *NONZERO-OCTET
PADDING            = *OCTET ; any bit stream, SHOULD be random
</artwork></figure>

<section title="APPNAME">
<t>The APPNAME field MUST contain the same data as that outlined in <xref target="RFC5424"/> for the APP-NAME field. Note that in the original Syslog protocol this field is limited to 1 to 48 characters of ASCII. syslog v2 lifts the length and character limitations such that the field may be any string of non-zero octets. A NILVALUE is also accepted here with the same justification as for Syslog.</t>
</section>

<section title="PROCID">
<t>The PROCID field MUST contain the same data as that outlined in <xref target="RFC5424"/> for the APP-NAME field. Note that in the original Syslog protocol this field is limited to 1 to 48 characters of ASCII. syslog v2 lifts the length and character limitations such that the field may be any string of non-zero octets. A NILVALUE is also accepted here with the same justification as for Syslog.</t>
</section>

<section title="MESSAGE">
<t>The MESSAGE field MUST contain the same data as that outlined in <xref target="RFC5424"/> for the MSG field. Note that in the original Syslog protocol this field is limited to 1 to 48 characters of ASCII. syslog v2 lifts the length and character limitations such that the field may be any string of non-zero octets. A NILVALUE is also accepted here with the same justification as for Syslog.</t>
</section>

<section anchor="OPTION-ID" title="OPTION-ID">
<t>The OPTION-ID field specifies which option is next in the packet, before the other elements of the event are processed. An option id of zero means that there are no remaining options. A syslog v2 server MUST ignore any messages that have an option id that the server does not recognize. A list of base options is included in a later section of this document, although others may be added later in separate documents.</t>

<t>The first bit of the OPTION-ID field designates the option as being applied at a global level or an event level option. If an option is needed to be applied at a global and event level, the option must be specified in the template message twice, once as a global option and again as a local. Note that this results in duplicate application of the option functionality, for example if local and global encryption is specified, the individual event messages will be encrypted, as well as the entire log message itself.</t>
</section>

</section>

<section title="Options">
<t>Options allow the syslog v2 protocol to be extended with additional features as needed. We present several options below, though more can be added in future </t>
<t>Options can be specified as global or local to the event. This is represented by the first bit of the option id, as specified in the <xref target="OPTION-ID"/> section. Global options may behave slightly different than local options, though they will provide the same functionality.</t>

<section title="Encryption">
<t>The encryption option is designed to allow confidentiality of messages to be provided at a protocol level, instead of relying on underlying protocols or application features to provide confidentiality. The ABNF specification of the option is included below. The OPTION-ID must be either 0000 0000 0000 0001 for encryption of individual events or 1000 0000 0000 0001 for encryption of the entire log message.</t>

<figure><artwork type="abnf">
ENCRYPTION-OPTION  = ALGORITHM [ASSOCIATION-ID]

ALGORITHM          = %d00-255
ASSOCIATION-ID     =1*3DIGIT ; range 192 .. 999

DIGIT              = %d48 / NONZERO-DIGIT
NONZERO-DIGIT      = %d49-57
</artwork></figure>

<t>Note that if the encryption option is used as-is with no additional work, then the template message itself will be sent in the clear. This will allow passive observers to learn information about what events are being captured by the host, which could potentially defeat the intention of having the encryption implemented in the first place. To avoid this, template messages utilizing the encryption can be sent with the message truncated after the end of the encryption field, specifying global encryption. A second template message can then be sent using the established encryption scheme, complete with the remaining fields of the template message. This allows the contents of the event template to also be established without being revealed to observers.</t>

<section title="ALGORITHM">
<t>The first octet of the option specifies the algorithm to be used for encryption.</t>
</section>

<section title="ASSOCIATION-ID">
<t>The second octet of the option specifies the security association ID that this option will use. This value must be unique for a specific machine, so that the recipient of the log message can use this association together with the hostname to determine what parameters to use for decryption. When the encryption option is in use at a global level, the ASSOCIATION-ID field replaces the PRIVAL in the message header. This provides confidentiality of the priority levels of events within the message, while maintaining compatibility with older Syslog implementations formatting conventions.</t></section>
</section>

<section title="Compression">
<t>The compression option allows messages to make use of a compression algorithm in order to reduce the network overhead for sending specific messages. This option is useful in the event where the underlying transport protcol cannot support compression, or where an application-specific compression algorithm would be more effective than a generic one. The OPTION-ID must be either 0000 0000 0000 0010 for local compression or 1000 0000 0000 0010 for global compression.</t>

<figure><artwork type="abnf">
COMPRESSION-OPTION = ALGORITHM

ALGORITHM          = %d00-255
</artwork></figure>

<section title="ALGORITHM">
<t>The ALGORITHM field designates which compression algorithm is used for the compression of the fields. Algorithm identifiers are chosen in the format described in <xref target="RFC3749"/>.</t>
</section>

</section>

<section title="Event Acknowledgement and Retransmission">
<t>The Syslog protocol does not support message retransmission, specifying that if this is needed an underlying protcol must be used that provides this functionality. The ACK option allows this feature to be implemented for specific events where message receipt must be guaranteed, but no underlying protcol support is available. The OPTION-ID must be either 0000 0000 0000 0011 for acknowledgement of individual events or 1000 0000 0000 0011 for acknowledgement of entire messages.</t>

<figure><artwork type="abnf">
ACK-OPTION         = ACK-COUNT

ACK-COUNT          = %d00-255
</artwork></figure>

<section title="ACK-COUNT">
<t>The ACK-COUNT specifies the number of messages that the recipient will receive before sending an acknowledgement message.</t>
</section>

<section title="Acknowledgement Message">
<t>Acknowledgement messages are sent by log recipients according to the count message, or when the maximum time has been reached. This time SHOULD be a configurable value.</t>

<figure><artwork type="abnf">
ACK-MESSAGE        = TEMPLATE-ID EVENT-COUNT
TEMPLATE-ID        = 4OCTET
EVENT-COUNT        = OCTET ; the number of messages received

OCTET              = %d00 / NONZERO-OCTET
NONZERO-OCTET      = %d01-255
</artwork></figure>
</section>

</section>

</section>

<section anchor="IANA" title="IANA Considerations">

<t>None.</t>

</section>

<section anchor="Security" title="Security Considerations">

<t>There are no security considerations for an imaginary Internet Draft.</t>

</section>

<section anchor="Acknowledgements" title="Acknowledgements">

<t>This work was developed during the Fall 2016 semester of ECE 5584 Network Security, taught by Dr. Scot Ransbottom.</t>

</section>

</middle>

<back>

<references title="References">

&RFC2119;
&RFC3749;
&RFC5234;
&RFC5424;
&RFC7011;

</references>

</back>
</rfc>
